name: CI

# Run on master, tags, or any pull request
on:
  push:
    branches: [master]
    tags: ["*"]
  pull_request:

jobs:
  # unit tests with coverage
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6" # Latest
        os:
          - windows-latest
        arch:
          - x64
    steps:
      # check out the project and install Julia
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      # using a cache can speed up execution times
      - uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.arch }}-test-
            ${{ runner.os }}-${{ matrix.arch }}-
            ${{ runner.os }}-
      # build the dependencies, run the tests, and upload coverage results
      # NOTE: instead of using "julia-buildpkg", manually run install.jl then build.
      - name: Install Julia dependencies
        run: julia --color=yes --project=@. -e 'include("install.jl"); using Pkg; if VERSION >= v"1.1.0-rc1"; Pkg.build(verbose=true); else Pkg.build(); end'
        shell: bash
        env:
          CI: true
      - run: |
          git config --global user.name Tester
          git config --global user.email te@st.er
      - name: Run Tests
        uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Install Julia dependencies
        run: julia --color=yes --project=@. -e 'include("install.jl"); using Pkg; if VERSION >= v"1.1.0-rc1"; Pkg.build(verbose=true); else Pkg.build(); end'
        shell: bash
        env:
          CI: true
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DOCUMENTER_DEBUG: true